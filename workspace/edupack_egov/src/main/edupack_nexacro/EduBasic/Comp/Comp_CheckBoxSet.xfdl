<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Comp_CheckBoxSet" width="1000" height="700" titletext="Component-Checkbox">
    <Layouts>
      <Layout height="700" mobileorientation="landscape" width="1000">
        <Static id="Static08" taborder="0" text="CheckBoxSet" left="10" top="10" width="250" height="30" cssclass="sta_WF_Subtitle" onclick="Static08_onclick"/>
        <CheckBoxSet id="CheckBoxSet00" taborder="1" left="6" top="40" width="984" height="66" innerdataset="dsCheckBoxSet" codecolumn="code" datacolumn="data" readonlycolumn="readonly" canitemchange="CheckBoxSet00_canitemchange"/>
        <TextArea id="txt_result" taborder="2" top="157" height="290" right="10" width="410" value="CheckBoxSet&#10;&#10;* 여러 아이템 목록 중에서 한 개 이상의 값을 선택하기 위한 용도로 사용하는 컴포넌트입니다. &#10;* 각 아이템은 CheckBox 컴포넌트와 비슷하며 아이템의 배치 등의 동작은 Radio 컴포넌트와 비슷합니다."/>
        <Grid id="Grid00" taborder="3" top="470" height="170" binddataset="dsCheckBoxSet" autofittype="col" autosizingtype="none" right="10" width="410">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="43"/>
                <Column size="90"/>
                <Column size="74"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="code"/>
                <Cell col="1" text="data"/>
                <Cell col="2" text="readonly"/>
              </Band>
              <Band id="body">
                <Cell text="bind:code"/>
                <Cell col="1" text="bind:data"/>
                <Cell col="2" text="bind:readonly" cssclass="expr:readonly==&quot;0&quot;?&quot;&quot;:&quot;cell_style1&quot;"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static07_01" taborder="4" text="description" top="116" height="30" cssclass="sta_WF_TypeTitle" right="10" width="410"/>
        <Static id="Static07" taborder="5" text="Dataset Binding" left="5" top="131" width="250" height="30" cssclass="sta_WF_TypeTitle"/>
        <Button id="btn_readonly" taborder="6" text="readonly(1,3, true)" left="7" top="166" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_readonly01" taborder="7" text="readonly(1,3, false)" left="282" top="166" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_set_index" taborder="8" text="set_index(&quot;0, 4, 5&quot;)" left="7" top="246" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_set_index2" taborder="9" text="set_index(&quot;-1&quot;)" left="282" top="246" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_setSelect" taborder="10" text="setSelect(0, true)" left="7" top="416" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_setSelect0" taborder="11" text="setSelect(0, false)" left="282" top="416" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_setSelectRange" taborder="12" text="setSelectRange(1, 6, true)" left="7" top="506" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_setSelectItems" taborder="13" text="setSelectItems([5, 3, 1], true)" left="7" top="461" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_setSelectItems0" taborder="14" text="setSelectItems([5, 3, 1], false)" left="282" top="461" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_setSelectRange0" taborder="15" text="setSelectRange(1, 6, false)" left="282" top="506" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_set_rowcount" taborder="16" text="set_rowcount(2)" left="7" top="291" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_set_columncount" taborder="17" text="set_columncount(2)" left="282" top="291" width="270" height="40" onclick="Button_onclick"/>
        <Static id="Static07_00" taborder="18" text="Property" left="5" top="211" width="250" height="30" cssclass="sta_WF_TypeTitle"/>
        <Static id="Static07_00_00" taborder="19" text="Method" left="3" top="381" width="250" height="30" cssclass="sta_WF_TypeTitle"/>
        <Button id="btn_set_fittocontents" taborder="20" text="set_fittocontents(&quot;width&quot;)" left="282" top="336" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_set_direction" taborder="21" text="set_direction(&quot;vertical&quot;)" left="7" top="336" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_clearSelect" taborder="22" text="clearSelect()" left="282" top="551" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_selectAll" taborder="23" text="selectAll()" left="7" top="551" width="270" height="40" onclick="Button_onclick"/>
        <Button id="Button00" taborder="24" text="reload" left="417" top="126" width="135" height="35" onclick="Button00_onclick"/>
        <Button id="btn_getSelectedCount" taborder="25" text="getSelectedCount" left="7" top="596" width="270" height="40" onclick="Button_onclick"/>
        <Button id="btn_getSelectedItems00" taborder="26" text="getSelectedItems" left="282" top="596" width="270" height="40" onclick="Button_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.CheckBoxSet00_canitemchange = function(obj:nexacro.CheckBoxSet,e:nexacro.ItemChangeEventInfo)
{
	var strRtn = "";
	strRtn += "obj : " + obj.name;
	strRtn += "\ne.eventid : " + e.eventid;
	strRtn += "\n---------------------------------------------";
	strRtn += "\ne.postindex : " + e.postindex;
	strRtn += "\ne.postvalue : " + e.postvalue;
	strRtn += "\ne.posttext : " + e.posttext;
	strRtn += "\n---------------------------------------------";
	strRtn += "\ne.preindex : " + e.preindex;
	strRtn += "\ne.prevalue : " + e.prevalue;
	strRtn += "\ne.pretext : " + e.pretext;
	
	this.txt_result.set_value(strRtn);
};

this.Button_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
	var strTxt = obj.text;
	var strDes = "";
	
	switch(strTxt) {
		case 'readonly(1,3, true)':
			this.dsCheckBoxSet.setColumn(1, "readonly", "1");
			this.dsCheckBoxSet.setColumn(3, "readonly", "1");
			strDes = "CheckBoxSet 컴포넌트에서 아이템 readonly 여부 설정 시 사용될 Column의 값이 true인 경우에는 모든 아이템이 readonly로 처리됩니다";
			strDes += '\n > false로 처리되는 값  : - 0, -0, "0", "-0", "false", "NaN", 빈 값, Null';
			break;
		case 'readonly(1,3, false)':
			this.dsCheckBoxSet.setColumn(1, "readonly", "0");
			this.dsCheckBoxSet.setColumn(3, "readonly", "0");
			strDes = "CheckBoxSet 컴포넌트에서 아이템 readonly 여부 설정 시 사용될 Column의 값이 true인 경우에는 모든 아이템이 readonly로 처리됩니다";
			strDes += '\n > false로 처리되는 값  : - 0, -0, "0", "-0", "false", "NaN", 빈 값, Null';
			break;
		case 'set_index("0, 4, 5")':
			this.CheckBoxSet00.set_index("0, 4, 5");	
			strDes = "CheckBoxSet 컴포넌트의 아이템 중 선택된 아이템의 인덱스를 갖는 속성입니다.";
			strDes += "\n선택할 아이템의 인덱스를 1개 이상 콤마(,) 구분자를 사용해 설정합니다.";
			strDes += "\n인덱스는 0부터 시작하며 (아이템개수 - 1)까지 설정할 수 있습니다.";
			break;
		case 'set_index("-1")':
			this.CheckBoxSet00.set_index("-1");
			strDes = '속성값을 "-1"로 설정하면 선택된 아이템이 없는 상태가 됩니다.';
			break;	
		case 'set_rowcount(2)':
		case 'set_rowcount(0)':	
			var index = nexacro.toNumber(strTxt.slice(-2, strTxt.length-1));
			this.CheckBoxSet00.set_columncount(0);
			this.CheckBoxSet00.set_rowcount(index);
			obj.set_text("set_rowcount("+ (index==0?2:0) + ")");	
			strDes = 'CheckBoxSet 컴포넌트에서 한 행에 표시되는 아이템 개수를 설정하는 속성입니다.';
			strDes += '\nrowcount 속성값이 1 이상이고 direction 속성값을 "vertical"으로 설정했을 때 columncount 속성값은 무시합니다. ';
			strDes += '\n또한 rowcount 속성값이 1 이상이고 columncount 속성값이 0 또는 -1로 설정했을 때 columncount 속성값은 무시합니다.';
			break;					
		case 'set_columncount(2)':
		case 'set_columncount(0)':
			var index = nexacro.toNumber(strTxt.slice(-2, strTxt.length-1));
			this.CheckBoxSet00.set_rowcount(1);
			this.CheckBoxSet00.set_columncount(index);
			obj.set_text("set_columncount("+ (index==0?2:0) + ")");
			strDes = 'CheckBoxSet 컴포넌트에서 한 열에 표시되는 아이템 개수를 설정하는 속성입니다.';
			strDes += '\ncolumncount 속성값이 1 이상이고 direction 속성값을 "horizontal"으로 설정했을 때 rowcount 속성값은 무시합니다.';
			strDes += '\n또한 columncount 속성값이 1 이상이고 rowcount 속성값이 0 또는 -1로 설정했을 때 rowcount 속성값은 무시합니다.';
			break;		
		case 'set_direction("vertical")':
		case 'set_direction("horizontal")':	
			var strGubun = strTxt.substring(strTxt.search('"')+1, strTxt.length - 2);			
			this.CheckBoxSet00.set_direction(strGubun);
			strGubun = strGubun=="vertical"?"horizontal":"vertical";
			obj.set_text('set_direction("'+strGubun +'")');
			strDes = 'CheckBoxSet 컴포넌트에서 아이템이 표시되는 방향을 설정하는 속성입니다.';
			break;		
		case 'set_fittocontents("width")':
		case 'set_fittocontents("none")':
			var strGubun = strTxt.substring(strTxt.search('"')+1, strTxt.length - 2);			
			this.CheckBoxSet00.set_fittocontents(strGubun);
			strGubun = strGubun=="width"?"none":"width";
			obj.set_text('set_fittocontents("'+strGubun +'")');
			strDes = 'CheckBoxSet 의 내부 컨텐츠영역이 컨텐츠 내용에 맞게 자동조정되는 영역을 설정하는 속성입니다.';
			break;			
		case 'setSelect(0, true)':
			this.CheckBoxSet00.clearSelect();
			this.CheckBoxSet00.setSelect(0, true);
			strDes = 'CheckBoxSet 컴포넌트에서 특정 아이템의 선택상태를 설정하는 메서드입니다.';
			strDes += '\ntrue 설정 시 아이템이 선택상태로 설정됩니다';
			break;		
		case 'setSelect(0, false)':
			this.CheckBoxSet00.setSelect(0, false);
			strDes = 'CheckBoxSet 컴포넌트에서 여러 개의 아이템을 선택하는 메서드입니다.';
			strDes += '\nfalse 설정 시 아이템의 선택상태가 해제됩니다.';
			break;		
		case 'setSelectItems([5, 3, 1], true)':
			this.CheckBoxSet00.clearSelect();
			this.CheckBoxSet00.setSelectItems([5, 3, 1], true);
			strDes = 'CheckBoxSet 컴포넌트에서 여러 개의 아이템을 선택하는 메서드입니다.';
			strDes += '\ntrue 설정 시 아이템이 선택상태로 설정됩니다';
			
			break;		
		case 'setSelectItems([5, 3, 1], false)':
			this.CheckBoxSet00.setSelectItems([5, 3, 1], false);
			strDes = 'CheckBoxSet 컴포넌트에서 여러 개의 아이템을 선택하는 메서드입니다.';
			strDes += '\nfalse 설정 시 아이템이 선택상태가 해제됩니다';			
			break;
		case 'setSelectRange(1, 6, true)':
			this.CheckBoxSet00.clearSelect();
			this.CheckBoxSet00.setSelectRange(1, 6, true);
			strDes = 'CheckBoxSet 컴포넌트에서 지정된 인덱스 범위의 아이템 영역을 선택하는 메서드입니다.';
			strDes += '\ntrue 설정 시 아이템이 선택상태로 설정됩니다';
			break;		
		case 'setSelectRange(1, 6, false)':
			this.CheckBoxSet00.setSelectRange(1, 6, false);
			strDes = 'CheckBoxSet 컴포넌트에서 지정된 인덱스 범위의 아이템 영역을 선택하는 메서드입니다.';
			strDes += '\nfalse 설정 시 아이템이 선택상태가 해제됩니다';			
			break;							
		case 'selectAll()':
			this.CheckBoxSet00.selectAll();
			strDes = 'CheckBoxSet 컴포넌트에서 아이템을 모두 선택하는 메서드입니다.';
			break;
		case 'clearSelect()':
			this.CheckBoxSet00.clearSelect();
			strDes = 'CheckBoxSet 컴포넌트에서 선택된 아이템의 선택상태를 모두 해제하는 메서드입니다.';
			break;
		case 'getSelectedCount':
			strDes = this.CheckBoxSet00.getSelectedCount();
			strDes += '\nCheckBoxSet 컴포넌트의 아이템 중 선택상태인 아이템의 개수를 반환하는 메서드입니다.';
			break;		
		case 'getSelectedItems':
			strDes = this.CheckBoxSet00.getSelectedItems();
			strDes += '\nCheckBoxSet 컴포넌트의 아이템 중 선택상태인 아이템의 인덱스를 배열로 반환하는 메서드입니다.';
			break;		
		default:
	}
	
	var strRtn = "";
	strRtn += strTxt;
	strRtn += "\n---------------------------------------------";
	strRtn += "\n" + strDes;
	this.txt_result.set_value(strRtn);
};

this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.reload();
};
]]></Script>
    <Objects>
      <Dataset id="dsCheckBoxSet">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="data" type="STRING" size="256"/>
          <Column id="readonly" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="code">1</Col>
            <Col id="data">apple</Col>
            <Col id="readonly">0</Col>
          </Row>
          <Row>
            <Col id="code">2</Col>
            <Col id="data">banana</Col>
            <Col id="readonly">0</Col>
          </Row>
          <Row>
            <Col id="code">3</Col>
            <Col id="data">orange</Col>
            <Col id="readonly">0</Col>
          </Row>
          <Row>
            <Col id="code">4</Col>
            <Col id="data">kiwi</Col>
            <Col id="readonly">0</Col>
          </Row>
          <Row>
            <Col id="code">5</Col>
            <Col id="data">peach</Col>
            <Col id="readonly">0</Col>
          </Row>
          <Row>
            <Col id="data">mango</Col>
            <Col id="code">6</Col>
            <Col id="readonly">0</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsDescription">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="DescKor" type="STRING" size="256"/>
          <Column id="DescEng" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
